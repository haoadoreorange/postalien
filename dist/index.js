"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,s){void 0===s&&(s=r),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,s){e[s=void 0===s?r:s]=t[r]}),__exportStar=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||__createBinding(t,e,r)},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.postkid=void 0,require("lib/polyfill");const requests_1=require("types/requests"),varnager_1=require("lib/varnager"),inquirer_1=__importDefault(require("inquirer")),path_1=__importDefault(require("path")),fs_1=__importDefault(require("fs")),ensureDirectoryExistence=e=>{e=path_1.default.dirname(e);if(fs_1.default.existsSync(e))return!0;ensureDirectoryExistence(e),fs_1.default.mkdirSync(e)},extractRequests=(()=>{let n=-1;const a=(e,t=" ")=>0===n?e:t.repeat(2*n+1)+" "+e,o=[],u={};return function f(e,t=""){for(const i in e){var r=t+"/"+i.replaceAll(" ","-"),s=e[i];(0,requests_1.isRequest)(s)?(u[r]=s,o.push({name:a(i),value:r})):(n++,o.push(new inquirer_1.default.Separator(a(i,"="))),f(s,r),n--)}return{choices:o,requests:u}}})(),prompt=e=>{const i="request",{choices:t,requests:n}=extractRequests(e),r={type:"list",name:i,message:"Which request to make ?",choices:t};return function f(){inquirer_1.default.prompt([r]).then(async e=>{const t=n[e[i]];t.body&&(t.body=(e=>{let t=JSON.stringify(e);const r=new Set;for(const i of[...t.matchAll(/"{{(.*?)}}"/g)])r.has(i[0])||(r.add(i[0]),t=t.replaceAll(i[0],JSON.stringify((0,varnager_1.getVar)(i[1]))));r.clear();for(const n of[...t.matchAll(/{{(.*?)}}/g)]){var s;r.has(n[0])||(r.add(n[0]),s=(0,varnager_1.getVar)(n[1]),t=t.replaceAll(n[0],"string"==typeof s?s:JSON.stringify(s).replaceAll('"','\\"')))}return JSON.parse(t)})(t.body));var r=await t.request(t.prequest?await t.prequest():null),s=JSON.stringify(r,null,4);t.quiet||(console.log("Result of query "+e[i]),console.log(s)),t.postquest&&await t.postquest(r);e="results"+e[i]+".json";ensureDirectoryExistence(e),fs_1.default.writeFileSync(e,s)}).catch(e=>{console.error(e)}).finally(()=>f())}},postkid=e=>prompt(e)();exports.postkid=postkid,__exportStar(require("lib/varnager"),exports);
//# sourceMappingURL=index.js.map
